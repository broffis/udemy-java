package com.in28minutes.threads;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

class Task extends Thread {
	private int num;

	public Task(int num) {
		this.num = num;
	}
	
	public void run() {
		System.out.printf("\n Task %d Started", num);
		
		for (int i = num*100; i < num*100 + 99; i++) {
			System.out.print(i + " ");
		}

		System.out.printf("\nTask %d Done\n", num);
	}
}

public class ExecutorServiceRunner {

	public static void main(String[] args) {
//		ExecutorService executorService = Executors.newSingleThreadExecutor();
		ExecutorService executorService = Executors.newFixedThreadPool(2);
		executorService.execute(new Task1());
		executorService.execute(new Thread(new Task2()));

		System.out.print("\nTask3 Kicked Off");

		// Task 3
		for (int i = 301; i < 399; i++) {
			System.out.print(i + " ");
		}

		System.out.print("\nTask3 Done");

		System.out.print("\nMain Done");

		executorService.shutdown();

	}

}

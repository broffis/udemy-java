package com.in28minutes.arrays;

import java.math.BigDecimal;
import java.math.RoundingMode;
import java.util.ArrayList;

public class Student {
	private ArrayList<Integer> marks;
	private String name;

	Student(String name, int... marks) {
		this.name = name;
		this.marks = marks;
	}

	int getNumberOfMarks() {
		return marks.length;
	}

	int getTotalSumOfMarks() {
		int sum = 0;

		for (int i = 0; i < marks.length - 1; i++) {
			sum += marks[i];
		}

		return sum;
	}

	int getMaximumMark() {
//		int[] sorted = marks;
//		Arrays.sort(sorted);
//
//		return sorted[sorted.length - 1];

		int maximum = Integer.MIN_VALUE;
		for (int mark : marks) {
			if (mark > maximum) {
				maximum = mark;
			}
		}

		return maximum;
	}

	int getMinimumMark() {
//		int[] sorted = marks;
//		Arrays.sort(sorted);
//
//		return sorted[0];

		int minimum = Integer.MAX_VALUE;
		for (int mark : marks) {
			if (mark < minimum) {
				minimum = mark;
			}
		}

		return minimum;
	};

	BigDecimal getAverageMark() {
		int sum = getTotalSumOfMarks();
		int number = getNumberOfMarks();

		return new BigDecimal(sum).divide(new BigDecimal(number), 2, RoundingMode.DOWN);
	};
	
	void addNewMark(int mark) {
		
	}
	
	void removeMark(int mark) {}

}
